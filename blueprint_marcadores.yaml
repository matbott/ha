blueprint:
  name: ⚽️ AWTRIX - Marcadores 1.2v
  author: Matias
  domain: automation
  source_url: https://raw.githubusercontent.com/matbott/ha/main/blueprint_marcadores.yaml
  input:
    awtrix:
      name: AWTRIX Device
      description: Select the Awtrix 3
      selector:
        device:
          integration: mqtt
          manufacturer: Blueforcer
          model: AWTRIX 3
          multiple: true
    appname:
      name: Awtrix Application name
      description: This is the app name listed in the MQTT topic - it should be unique.
      default: app_futbol
      selector:
        text: {}
    message_duration:
      name: Message Duration ⏱️
      description: How long should the message remain on the screen (in seconds).
      selector:
        number:
          min: 0.0
          max: 300.0
          unit_of_measurement: sec
          step: 1.0
          mode: slider
      default: 15
    my_sensor:
      name: Soccer Sensor
      description: Select your Team Sensor
      selector:
        entity:
          filter:
            - integration: teamtracker
          multiple: false
variables:
  device_ids: !input awtrix
  devices:
    "{% macro get_device(device_id) %}\n  {{ states((device_entities(device_id)
    | select('search','device_topic') | list)[0] | default('unknown')) }}\n{% endmacro
    %} {% set ns = namespace(devices=[]) %} {% for device_id in device_ids %}\n  {%
    set device=get_device(device_id)|replace(' ','')|replace('\\n','') %}\n  {% set
    ns.devices = ns.devices + [ device ] %}\n{% endfor %} {{ ns.devices | reject('match','unavailable|unknown')
    | list }}"
  appname: !input appname
  my_sensor: !input my_sensor
  message_duration: !input message_duration
  
  # Determinar qué equipo es local y cuál visitante
  home_team_abbr: "{{ state_attr(my_sensor, 'team_abbr') if state_attr(my_sensor, 'team_homeaway') == 'home' else state_attr(my_sensor, 'opponent_abbr') }}"
  away_team_abbr: "{{ state_attr(my_sensor, 'opponent_abbr') if state_attr(my_sensor, 'team_homeaway') == 'home' else state_attr(my_sensor, 'team_abbr') }}"
  
  # Colores del equipo local
  home_team_color_1: "{{ state_attr(my_sensor, 'team_colors')[0] if state_attr(my_sensor, 'team_homeaway') == 'home' else state_attr(my_sensor, 'opponent_colors')[0] }}"
  home_team_color_2: "{{ state_attr(my_sensor, 'team_colors')[1] if state_attr(my_sensor, 'team_homeaway') == 'home' else state_attr(my_sensor, 'opponent_colors')[1] }}"
  
  # Colores del equipo visitante
  away_team_color_1: "{{ state_attr(my_sensor, 'opponent_colors')[0] if state_attr(my_sensor, 'team_homeaway') == 'home' else state_attr(my_sensor, 'team_colors')[0] }}"
  away_team_color_2: "{{ state_attr(my_sensor, 'opponent_colors')[1] if state_attr(my_sensor, 'team_homeaway') == 'home' else state_attr(my_sensor, 'team_colors')[1] }}"
  
  # Scores: Local vs Visitante
  home_team_score: "{{ state_attr(my_sensor, 'team_score') if state_attr(my_sensor, 'team_homeaway') == 'home' else state_attr(my_sensor, 'opponent_score') }}"
  away_team_score: "{{ state_attr(my_sensor, 'opponent_score') if state_attr(my_sensor, 'team_homeaway') == 'home' else state_attr(my_sensor, 'team_score') }}"
  
  payload_switch: "{\n  \"name\" : \"{{ appname }}\"\n}"
  
play_text: |-
    {% set last_play = state_attr(my_sensor, 'last_play') | default('', true) %}
    {% set play_text = '' %}
    {% if last_play is string and last_play | length > 0 %}
      {% if "'" in last_play or "’" in last_play %}
        {% set last_index = last_play.rfind("'") %}
        {% if last_index == -1 %}
        {% set last_index = last_play.rfind("’") %}
        {% endif %}
        {% if last_index >= 2 %}
          {% set play_text = last_play[last_index - 2:] | trim %}
        {% else %}
          {% set play_text = last_play %}
        {% endif %}
      {% else %}
        {% set play_text = last_play %}
      {% endif %}
    {% else %}
      {% set play_text = 'No play data' %}More actions
    {% endif %}
    {{ play_text | default('No play data') }}

scoreBoard:
    "{\n  \"text\": \"     {{ home_team_abbr }} {{ home_team_score }}-{{ away_team_score }} {{ away_team_abbr }} - {{ state_attr(my_sensor, 'clock') }} | {{ play_text }}\",\n  \"draw\":[ 
    \n    {\"df\":[0,1,8,2,\"{{ home_team_color_1 }}\"]},\n    {\"df\":[1,3,6,5,\"{{
    home_team_color_1 }}\"]},\n    {\"dl\":[3,0,4,0,\"{{ home_team_color_1 }}\"]},\n
    \   {\"dl\":[2,2,2,7,\"{{ home_team_color_2 }}\"]},\n    {\"dl\":[5,2,5,7,\"{{
    home_team_color_2 }}\"]},\n    {\"df\":[24,1,8,2,\"{{ away_team_color_1 }}\"]},\n
    \   {\"df\":[25,3,6,5,\"{{ away_team_color_1 }}\"]},\n    {\"dl\":[27,0,28,0,\"{{
    away_team_color_1 }}\"]},\n    {\"dl\":[26,2,26,7,\"{{ away_team_color_2 }}\"]},\n
    \   {\"dl\":[29,2,29,7,\"{{ away_team_color_2 }}\"]}    
    \n  ], \n  \"duration\": {{ message_duration }},\n  \"background\": \"#006c28\"\n}"
trigger:
  - platform: state
    entity_id: !input my_sensor
    to: "IN"
    id: gameStart

  - platform: state
    entity_id: !input my_sensor
    to:
      - "PRE"
      - "POST"
      - "NOT_FOUND"
    id: noGame

  - platform: state
    entity_id: !input my_sensor
    attribute: team_score
    id: scoreChangeHome

  - platform: state
    entity_id: !input my_sensor
    attribute: opponent_score
    id: scoreChangeOpponent

  - platform: state
    entity_id: !input my_sensor
    attribute: quarter
    to: "2"
    id: halftime

  - platform: state
    entity_id: !input my_sensor
    attribute: last_play
    from: null
    id: lastPlayChange

  - platform: state
    entity_id: !input my_sensor
    attribute: clock
    from: null
    to: "MT"
    id: clock

condition: []
action:
  - repeat:
      for_each: "{{ devices }}"
      sequence:
        - choose:
            - conditions:
                - condition: trigger
                  id:
                    - gameStart
                    - scoreChangeHome
                    - scoreChangeOpponent
                    - halftime
                    - lastPlayChange
                    - clock
                - condition: state
                  entity_id: !input my_sensor
                  state: IN
              sequence:
                - service: mqtt.publish
                  data:
                    qos: 0
                    retain: false
                    topic: "{{ repeat.item }}/custom/{{ appname }}"
                    payload: "{{ scoreBoard }}"
                - service: mqtt.publish
                  data:
                    qos: 0
                    retain: false
                    topic: "{{ repeat.item }}/switch"
                    payload: "{{ payload_switch }}"
            - conditions:
                - condition: trigger
                  id:
                    - noGame
              sequence:
                - service: mqtt.publish
                  data:
                    qos: 0
                    retain: false
                    topic: "{{ repeat.item }}/custom/{{ appname }}"
                    payload: "{}"
mode: restart
